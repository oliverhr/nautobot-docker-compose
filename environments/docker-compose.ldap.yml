---
x-nautobot-build: &nautobot-build
  build:
    context: "../"
    dockerfile: "environments/ldap.dockerfile"
    args:
      NAUTOBOT_VERSION: "${NAUTOBOT_VERSION}"
      PYTHON_VERSION: "${PYTHON_VERSION}"
      PYTHON_SUPPORTED_RANGE: "${PYTHON_SUPPORTED_RANGE}"
    target: "nautobot"

x-nautobot-base: &nautobot-base
  image: "${IMAGE_NAME}"
  env_file:
    - "local.env"
    - "creds.env"
  tty: true

# -----------------------------------------------------------------------------

services:
  nautobot:
    depends_on:
      - "db"
      - "redis"
    <<: [*nautobot-base, *nautobot-build]
    # volumes:
    #   - "./nautobot.key:/opt/nautobot/nautobot.key:ro"
    #   - "./nautobot.crt:/opt/nautobot/nautobot.crt:ro"

  celery_worker:
    entrypoint:
      - "sh"
      - "-c" # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery worker -l $$NAUTOBOT_LOG_LEVEL --events"
    depends_on:
      - "nautobot"
    healthcheck:
      interval: "30s"
      timeout: "10s"
      start_period: "30s"
      retries: 3
      test:
        [
          "CMD",
          "bash",
          "-c",
          "nautobot-server celery inspect ping --destination celery@$$HOSTNAME",
        ]
    <<: *nautobot-base

  celery_beat:
    entrypoint:
      - "sh"
      - "-c" # this is to evaluate the $NAUTOBOT_LOG_LEVEL from the env
      - "nautobot-server celery beat -l $$NAUTOBOT_LOG_LEVEL"
    depends_on:
      - "nautobot"
    healthcheck:
      disable: true
    <<: *nautobot-base

  redis:
    image: "redis:6-alpine"
    env_file:
      - "local.env"
      - "creds.env"
    command:
      - "sh"
      - "-c" # this is to evaluate the $REDIS_PASSWORD from the env
      - "redis-server --appendonly yes --requirepass $$NAUTOBOT_REDIS_PASSWORD"
    restart: "unless-stopped"
